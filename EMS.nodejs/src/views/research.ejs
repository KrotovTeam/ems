<!doctype html>
<html lang="en">
<head>
    <title>Explore anthropogenic phenomena!</title>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
          integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link type="text/css" rel="stylesheet" href="css/simplePagination.css"/>
    <script src="js/jquery-3.2.1.min.js"></script>
    <script src="js/jquery-ui.js"></script>

    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <script src="https://api-maps.yandex.ru/2.1/?lang=ru_RU" type="text/javascript"></script>
    <script src="js/polygonEditor.js" type="text/javascript"></script>
    <script src="js/jquery.simplePagination.js" type="text/javascript"></script>
    <style>
        #map {
            width: 100%;
            height: 700px;
            padding: 0;
            margin: 0;
        }
    </style>

    <script>

        $(document).ready(function () {
            $.ajax({
                type: "GET",
                url: `/research/list?skip=${0}&take=${10}`,
                success: function (data) {
                    if (data.code === 200) {
                        const arrayResearch = data.data.items;

                        for (let i = 0; i < arrayResearch.length; i++) {
                            $('.list-group').append(`<a href="#" id="${arrayResearch[i].id}" name="menu_item" class="list-group-item list-group-item-action">${new Date(arrayResearch[i].createdAt).toISOString().substring(0, 10)} ${arrayResearch[i].researchName}</a>`);
                        }
                        listenClickMenuItem();
                        $(function () {
                            $('#paginator').pagination({
                                items: data.data.total,
                                itemsOnPage: 10,
                                cssStyle: 'light-theme',
                                onPageClick: function (pageNumber, event) {
                                    $.ajax({
                                        type: "GET",
                                        url: `/research/list?skip=${(pageNumber - 1) * 10}&take=${10}`,
                                        success: function (data) {
                                            if (data.code === 200) {
                                                const arrayResearch = data.data.items;

                                                $('.list-group').empty();
                                                $('.list-group').append(`<a href="#" class="list-group-item active">Выберите иследования</a>`)
                                                for (let i = 0; i < arrayResearch.length; i++) {

                                                    $('.list-group').append(`<a href="#" id="${arrayResearch[i].id}" name="menu_item" class="list-group-item list-group-item-action">${new Date(arrayResearch[i].createdAt).toISOString().substring(0, 10)} ${arrayResearch[i].researchName}</a>`);
                                                }
                                                listenClickMenuItem();
                                            }
                                            else {
                                                alert('Ошибка авторизации');
                                            }
                                            console.log(data)
                                        },
                                        error: function (err) {
                                            console.log(err)
                                            alert('Ошибка получения списка запросов Вы не автроризированы');
                                        }
                                    });
                                }
                            });
                        });
                        //console.log($('#paginator').pagination('getCurrentPage'));
                    }
                    else {
                        alert('Ошибка авторизации');
                    }
                    console.log(data)
                },
                error: function (err) {
                    console.log(err)
                    alert('Ошибка получения списка запросов Вы не автроризированы');
                }
            });
        });


        function createTable(infoObj) {

            const MONTH_ENUM = {
                1: 'Январь',
                2: 'Февраль',
                3: 'Март',
                4: 'Апрель',
                5: 'Мая',
                6: 'Июнь',
                7: 'Июль',
                8: 'Август',
                9: 'Сентябрь',
                10: 'Октябрь',
                11: 'Ноябрь',
                12: 'Декабрь'
            };

            const STATE = {
                1: 'Создан. На обработке.',
                2: 'Загрузка снимков',
                3: 'Калибровка данных',
                4: 'Поиск явления',
                5: 'Явление не найдено',
                6: 'Загрузка дополнительных снимков для определения хар-к',
                7: 'Вычисление характеристик',
                8: 'Завершен',
                9: 'Ошибка при получение снимков',
                10: 'Неизвестная ошибка'
            };

            let elementTable = $('<table/>', {
                class: 'table table-hover table-bordered',
            });


            elementTable.append("<thead>\n" +
                "    <tr class='info'>\n" +
                "      <th scope=\"col\">Параметр</th>\n" +
                "      <th scope=\"col\">Значение</th>\n" +
                "    </tr>\n" +
                "  </thead>")

            let tbody = $('<tbody/>');
            elementTable.append(tbody);
            let tr = _createTr();
            tbody.append(tr);
            tr.append(_createTd('Индитификатор запроса'));
            tr.append(_createTd(infoObj.id));

            tr = _createTr();
            tbody.append(tr);
            tr.append(_createTd('Природное явленеие'));
            tr.append(_createTd(infoObj.researchName));

            tr = _createTr();
            tbody.append(tr);
            tr.append(_createTd('Статус'));
            tr.append(_createTd(STATE[infoObj.status]));

            tr = _createTr();
            tbody.append(tr);
            tr.append(_createTd('Координаты пользователя'));
            tr.append(_createTd(infoObj.coordinateUser));

            tr = _createTr();
            tbody.append(tr);
            tr.append(_createTd('Кол-во иследуемых лет'));
            tr.append(_createTd(infoObj.numberYears));

            tr = _createTr();
            tbody.append(tr);
            tr.append(_createTd('Месяц иследования'));
            tr.append(_createTd(MONTH_ENUM[infoObj.month]));


            tr = _createTr();
            tbody.append(tr);
            tr.append(_createTd('Максимальная облачность'));
            tr.append(_createTd(infoObj.cloudMax + '%'));

            tr = _createTr();
            tbody.append(tr);
            tr.append(_createTd('Дата создания запроса'));
            tr.append(_createTd(new Date(infoObj.createdAt).toISOString().substring(0, 10)));

            tr = _createTr();
            tbody.append(tr);
            tr.append(_createTd('Пути к скаченным снимкам'));
            tr.append(_createTd(JSON.stringify(infoObj.pathsDownload)));


            return elementTable;
        }

        function _createTr() {
            return $('<tr/>'
            );
        }

        function _createTd(data) {
            let td = $('<td/>', {
                    class: 'success'
                }
            );
            td.append(data);
            return td;
        }

        function listenClickMenuItem() {

            $("a[name='menu_item']").on('click', function () {
                let id = $(this).attr('id');


                $.ajax({
                    type: 'GET',
                    url: `/research/${id}/details`,

                    success: function (data) {
                        if (data.code === 200) {
                            const infoResearchString = JSON.stringify(data.data)

                            $('.content').empty();

                            let elementRow = $('<div/>', {
                                class: 'row',
                            });
                            let elementDiv = $('<div/>', {
                                class: 'col-lg-5',
                            });
                            let elementColMd4 = $('<div/>', {
                                class: 'col-lg-7',
                            });
                            let elementThumbnail = $('<div/>', {
                                class: 'thumbnail',
                            });
                            elementColMd4.append(elementThumbnail);
                            elementRow.append(elementColMd4);
                            elementRow.append(elementDiv);

                            $('.content').append(elementRow);
                            // for (let i = 0; i < data.data.miniImagePath.length; i++) {
                            //     const imageName = data.data.miniImagePath[i].split('external\\')[1];
                            //     elementThumbnail.append(`<img src="${imageName}" alt="Lights" style="width:100%">`);
                            // }


                            elementColMd4.append($('<div/>', {
                                id: 'map'
                            }));

                            const coordinateUser = data.data.coordinateUser.map(coor => parseFloat(coor));

                            const coordinateCentr = [
                                coordinateUser[0] + (coordinateUser[2] - coordinateUser[0]) / 2,
                                coordinateUser[1] + (coordinateUser[3] - coordinateUser[1]) / 2,
                            ]

                            ymaps.ready(init);
                            var myMap, myRectangle;

                            function init() {
                                myMap = new ymaps.Map('map', {
                                    center: coordinateCentr,
                                    zoom: 10
                                }, {
                                    searchControlProvider: 'yandex#search'
                                });

                                myMap.setType('yandex#satellite');
                                // Создаем прямоугольник с помощью вспомогательного класса.
                                myRectangle = new ymaps.Rectangle([
                                    // Задаем координаты диагональных углов прямоугольника.
                                    [coordinateUser[0], coordinateUser[1]],
                                    [coordinateUser[2], coordinateUser[3]]
                                ], {
                                    //Свойства
                                    hintContent: 'Меня перетаскивать нельзя!',
                                    balloonContent: 'Прямоугольник 1'
                                }, {
                                    // Опции.
                                    // Цвет и прозрачность заливки.
                                    fillColor: '#7df9ff33',
                                    // Дополнительная прозрачность заливки..
                                    // Итоговая прозрачность будет не #33(0.2), а 0.1(0.2*0.5).
                                    fillOpacity: 0,
                                    // Цвет обводки.
                                    strokeColor: '#000000',
                                    // Прозрачность обводки.
                                    strokeOpacity: 0.9,
                                    // Ширина линии.
                                    strokeWidth: 5,
                                    // Радиус скругления углов.
                                    // Данная опция принимается только прямоугольником.
                                    //borderRadius: 20
                                });


                                var myCollection = new ymaps.GeoObjectCollection();
                                if (data.data.phenomenonPoints) {
                                    const phenomenonPoints = data.data.phenomenonPoints;
                                    phenomenonPoints.forEach(point => {
                                        // myMap.geoObjects.add( new ymaps.GeoObject({
                                        //     geometry: {
                                        //         type: "Point",
                                        //         // Переведем строку с координатами в массив
                                        //         coordinates:  [point.Latitude, point.Longitude]
                                        //     }
                                        // },
                                        //     {
                                        //         preset: "islands#darkGreenDotIcon"
                                        //     }
                                        // ));


                                        // Добавляем круг на карту.
                                    //     myMap.geoObjects.add(new ymaps.Circle([
                                    //         // Координаты центра круга.
                                    //         [point.Latitude, point.Longitude],
                                    //         // Радиус круга в метрах.
                                    //         30
                                    //     ], {
                                    //         // Описываем свойства круга.
                                    //         // Содержимое балуна.
                                    //         balloonContent: "Радиус круга - 10 км",
                                    //         // Содержимое хинта.
                                    //         hintContent: "Подвинь меня"
                                    //     }, {
                                    //         // Задаем опции круга.
                                    //         // Включаем возможность перетаскивания круга.
                                    //         // draggable: true,
                                    //         // Цвет заливки.
                                    //         // Последний байт (77) определяет прозрачность.
                                    //         // Прозрачность заливки также можно задать используя опцию "fillOpacity".
                                    //         //fillColor: "#DB709377",
                                    //         // Цвет обводки.
                                    //         strokeColor: "#ff0600",
                                    //         // Прозрачность обводки.
                                    //         strokeOpacity: 0,
                                    //         // Ширина обводки в пикселях.
                                    //         strokeWidth: 5
                                    //     }));
                                    })
                                }


                                myMap.geoObjects
                                    .add(myRectangle)
                                    .add(myCollection);
                            }


                            if (data.data.phenomenonResultFolder) {
                                const phenomenonName = `${data.data.phenomenonResultFolder.split('external\\')[1]}\\visible_dynamic.png`;
                                elementDiv.append(`<img src="${phenomenonName}" alt="Lights" style="width:100%">`);
                            }
                            elementDiv.append(`<p>${infoResearchString}</p>`);
                            elementDiv.append(createTable(data.data));


                            //elementThumbnail.append(`<img src="image\\xiroc.jpg" alt="Lights" style="width:100%">`);
                        }
                        else {
                            alert('Ошибка авторизации');
                        }
                        console.log(data)
                    },
                    error: function (err) {
                        console.log(err)
                        alert('Ошибка получения информации по иследованию');
                    }
                });


            })
        }

    </script>

</head>
<body>
<% include partials/headerNavigation.ejs %>
<div class="container-fluid">
    <h1> Мои исследования</h1>
</div>

<div class="container-fluid">
    <div class="row-fluid">
        <div class="col-md-2">
            <div class="list-group">
                <a href="#" class="list-group-item active">
                    Выберите иследования
                </a>
                <!--<a href="#" class="list-group-item list-group-item-action">Иследование 1</a>-->
                <!--<a href="#" class="list-group-item list-group-item-action">Иследование 2</a>-->
                <!--<a href="#" class="list-group-item list-group-item-action">Иследование 3</a>-->
            </div>
            <div id="paginator"></div>
        </div>
        <div class="col-md-8">
            <div class="card mb-4 box-shadow">
                <div class="content">
                    <img class="card-img-top"
                         data-src="holder.js/100px225?theme=thumb&amp;bg=55595c&amp;fg=eceeef&amp;text=Thumbnail"
                         alt="Thumbnail [100%x225]" style="height: 225px; width: 100%; display: block;"
                         src="data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22208%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20208%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_1636a6376f9%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A11pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_1636a6376f9%22%3E%3Crect%20width%3D%22208%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2266.9296875%22%20y%3D%22117.496875%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E"
                         data-holder-rendered="true">
                    <img class="card-img-top"
                         data-src="holder.js/100px225?theme=thumb&amp;bg=55595c&amp;fg=eceeef&amp;text=Thumbnail"
                         alt="Thumbnail [100%x225]" style="height: 225px; width: 100%; display: block;"
                         src="data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22208%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20208%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_1636a6376f9%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A11pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_1636a6376f9%22%3E%3Crect%20width%3D%22208%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2266.9296875%22%20y%3D%22117.496875%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E"
                         data-holder-rendered="true">
                </div>
            </div>
        </div>
    </div>
</div>
</body>
</html>